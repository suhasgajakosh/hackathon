package election;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;

/*
 * 1)	Election Winner: Provide the implementation for the function which will find out the winner. 
 * An array contains the list of candidates names of polled votes will be provided. 
 * The function should return the name of the candidate who wins. 
 * If more than one candidate gets same highest numbers of votes then sort their names in alphabetical order 
 * and winner should be the last name in the order.
Example Input : {joe,mon,joe,mon,rach,rach,rach,phoe,phoe,phoe}
Output : rach

 * */
public class ElectionWinner {

	public static void main(String[] args) {

		String arr[] = {"joe", "mon", "joe", "mon", "rach", "rach", "rach", "phoe", "phoe", "phoe"};
		

		String winner = findElectionWinner(arr);
		System.out.println(winner);

	}

	private static String findElectionWinner(String[] arr) {
		
		String winner = null;
		List<String> tieList = new ArrayList<>();
		Map<String, Integer> map = new HashMap<>();
		int count = 0;
		Arrays.sort(arr);
		for (String str : arr) {
			if (null != str) {
				if (null != map.get(str)) {
					map.put(str, map.get(str) + 1);
				} else {
					map.put(str, 1);
				}
			}
		}
		 
		for(Entry<String, Integer> entry : map.entrySet()) {
			if (count > 0) {
				tieList.add(winner);				
			}
			winner = entry.getKey();
			count ++;
			if (!tieList.isEmpty()) {
				
			}
		}
		
		return winner;
	}



}
